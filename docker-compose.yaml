version: "3.9"

services:
  product-service:
    build:
      context: ./services/productService
      dockerfile: ./Dockerfile
    hostname: product-service
    container_name: product-service
    restart: unless-stopped
    depends_on:
      - db_product-service
    ports:
      - "8000:8000"
    env_file:
      - ./services/productService/.env
    volumes:
      - ./services/productService:/home/app
      - poetry-product-service-cache:/root/.cache/pypoetry
    networks:
      - e-commerce

  db_product-service:
    image: postgres:14.3-alpine
    hostname: db_product-service
    container_name: db_product-service
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - db-product-service:/var/lib/postgresql/data
    networks:
      - e-commerce

  shopping-cart-service:
    build:
      context: ./services/shoppingCartService
      dockerfile: ./Dockerfile
    hostname: shopping-cart-service
    container_name: shopping-cart-service
    restart: unless-stopped
    depends_on:
      - db_shopping-cart-service
    ports:
      - "8001:8000"
    env_file:
      - ./services/shoppingCartService/.env
    volumes:
      - ./services/shoppingCartService:/home/app
      - poetry-shopping-cart-service-cache:/root/.cache/pypoetry
    networks:
      - e-commerce

  db_shopping-cart-service:
    image: postgres:14.3-alpine
    hostname: db_shopping-cart-service
    container_name: db_shopping-cart-service
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - db-hopping-cart-service:/var/lib/postgresql/data
    networks:
      - e-commerce

volumes:
  db-product-service:
    driver: local
  db-hopping-cart-service:
    driver: local
  poetry-product-service-cache:
  poetry-shopping-cart-service-cache:

networks:
  e-commerce:
    external: true